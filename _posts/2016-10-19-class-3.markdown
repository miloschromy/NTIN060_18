---
layout: post
title:  "Cvičenie č. 3 - Triedenie, Číselné sústavy, prvé riadky v Pascale"
date: 2016-10-19 1:01:00 +0100
categories: NPRG030
---
# Poznámky k triedeniu z DÚ č. 1

### Bubble sort
{% highlight python %}
Vstup: pole A dlžky n
for i := 1 to n - 1
	for j := 1 to n - i - 1
		if A[j] < A[j + 1]
			swap(A[j], A[j+1]) # prehoď hodnoty A[j] a A[j+1]
return A # zostupne zotriedené pole A
{% endhighlight %}

[Vizualizácia fungovania](http://www.programming-algorithms.net/article/39344/Bubble-sort)

**Na zamyslenie:**
* **Aká je presná časová zložitosť tejto implementácie?**
* **Aká je asymptotická zložitosť v najlepšom a najhoršom prípade?**

### Insertion sort
{% highlight python %}
Vstup: pole A dlžky n
for i := 0 to n - 2
	j := i + 1
	tmp = A[j]
	while j > 0 and tmp > a[j-1]
		if A[j] < A[j + 1]
			A[j] = A[j-1])
			j = j - 1
		a[j] = tmp
return A # zostupne zotriedené pole A
{% endhighlight %}

[Vizualizácia fungovania](http://www.programming-algorithms.net/article/39459/Insertion-sort)

**Na zamyslenie**
* **Aká je časová zložitošť tohto algoritmu v najhoršom prípade ? Na akom vstupe nastáva?**
* **Aká je časová zložitosť v najlepšom prípade? Na akom vstupne nastáva?**


### Counting sort
{% highlight python %}
Vstup: pole A dĺžky n
       max = najväčšia hodnota v poli A
Pomocné premenné:
       count - pole dĺžky max, na začiatku samé 0
for i in A:
	count[i] =  1

j := 1
for c in count:
	if c > 0
	   A[j] := c
	   j = j + 1
return A
{% endhighlight %}

**Na zamyslenie:**
* **Aká je asymptotická časová zložitosť tohto algoritmu?**

# Úlohy

## Pseudokód

### Logické operátory
![]({{site.baseurl}}/assets/img/binary-truth.svg)

### Swap
Navrhnite jednoduchý algoritmus prehodenia hodnôt dvoch celočíslených premenných **A** a **B** bez akejkoľvek pomocnej premennej.

### Správne uzátvorkovanie
Na vstup dostanete postupnosť zátvoriek **S** napr. **S="(()())()"**. Navrhnite algoritmus, ktorý skontroluje správnosť uzátvorkovania, tj. vŕati **True** ak je uzátvorkovanie správne a **False** inak.

### Bin2Dec a Dec2Bin
Navrhnite algoritmus prevodu binárneho čísla na číslo desiatkové a späť.

## Pascal
Jednoduchý program:
{% highlight pascal %}
Program priklad;
Var       
	Num1, Num2, Sum : Integer;
	a, b, c, d: Double;

Begin
	Write('Input number 1:');
	Readln(Num1);
	Writeln('Input number 2:');
	Readln(Num2);
	Sum := Num1 + Num2; {scitanie}
	Writeln(Sum);
	Readln;
End.  
{% endhighlight %}

### Kvadratická rovnica
Napíšte program, ktorý si zo štandardného vstupu postupne načíta parametre **\\(a,b,c\\)** kvadratickej rovnice v tvare **\\( ax^2 + bx + c = 0\\)** a vráti všetky jej koreňe.
Ošetrite všetky možnosti, tj. rovnica má:
* **2 reálne korene**
* **1 réalny koreň**
* **2 komplexné korene**

Ak si nevzpomínate na riešenie kvadratickej rovnice, tak si pomôžte [wikipediou](https://cs.wikipedia.org/wiki/Kvadratick%C3%A1_rovnice).
# Domáce úlohy
Vašu domácu úlohu tentokrát nájdete v **[CodEx](https://codex.ms.mff.cuni.cz/codex-prg/)**-e.
Ide o úlohy **PPPPP 0.2 Hello World 2** a **Suma**.

**<span class="red">Niekoľko z vás som v CodEx-e nenašiel, zariadte si účet a napíšte mi.</span>**

**Termín odovzdania: 26. 10. 2016 (23:59)**
